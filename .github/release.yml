name: Release

on:
  push:
    branches: [ main ]

jobs:
  release:
    name: Release on GitHub
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Build project
      run: cargo build --release

    - name: Run tests
      run: cargo test

    - name: Get version
      id: get_version
      run: | 
        echo ::set-output name=VERSION::$(cargo pkgid | cut -d# -f2 | cut -d: -f2)

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/webdir
        asset_name: webdir-linux-amd64
        asset_content_type: application/octet-stream